<?xml version="1.0" encoding="UTF-8"?>
<!-- Do not edit this file with editors other than draw.io -->
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="1594px" height="1166px" viewBox="-0.5 -0.5 1594 1166" content="&lt;mxfile host=&quot;app.diagrams.net&quot; agent=&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36&quot; version=&quot;24.8.3&quot; scale=&quot;1&quot; border=&quot;0&quot;&gt;&#10;  &lt;diagram name=&quot;第 1 页&quot; id=&quot;0fY2gfG4inFM0IlagYLb&quot;&gt;&#10;    &lt;mxGraphModel dx=&quot;778&quot; dy=&quot;1562&quot; grid=&quot;1&quot; gridSize=&quot;9&quot; guides=&quot;1&quot; tooltips=&quot;1&quot; connect=&quot;1&quot; arrows=&quot;1&quot; fold=&quot;1&quot; page=&quot;1&quot; pageScale=&quot;1&quot; pageWidth=&quot;827&quot; pageHeight=&quot;1169&quot; math=&quot;0&quot; shadow=&quot;0&quot;&gt;&#10;      &lt;root&gt;&#10;        &lt;mxCell id=&quot;0&quot; /&gt;&#10;        &lt;mxCell id=&quot;1&quot; parent=&quot;0&quot; /&gt;&#10;        &lt;mxCell id=&quot;xZzTaOt1aIzmAzum-WpP-3&quot; value=&quot;&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;xZzTaOt1aIzmAzum-WpP-1&quot; target=&quot;xZzTaOt1aIzmAzum-WpP-2&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;xZzTaOt1aIzmAzum-WpP-8&quot; value=&quot;&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;xZzTaOt1aIzmAzum-WpP-1&quot; target=&quot;xZzTaOt1aIzmAzum-WpP-7&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;xZzTaOt1aIzmAzum-WpP-1&quot; value=&quot;AsioServicePool单例类中work_ptr管理work绑定ioservice让其不退出&quot; style=&quot;rounded=0;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;18&quot; y=&quot;345.5&quot; width=&quot;162&quot; height=&quot;63&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;xZzTaOt1aIzmAzum-WpP-5&quot; value=&quot;&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;xZzTaOt1aIzmAzum-WpP-2&quot; target=&quot;xZzTaOt1aIzmAzum-WpP-4&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;xZzTaOt1aIzmAzum-WpP-12&quot; value=&quot;&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;xZzTaOt1aIzmAzum-WpP-2&quot; target=&quot;xZzTaOt1aIzmAzum-WpP-11&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;xZzTaOt1aIzmAzum-WpP-2&quot; value=&quot;GetIOService（）获取池中的io_context让其使用。所有的io_contex存储在vector中。&amp;lt;div&amp;gt;有多少io_contex就有多少work_ptr，也是存储在vector中。&amp;lt;/div&amp;gt;&quot; style=&quot;rounded=0;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;243&quot; y=&quot;332&quot; width=&quot;162&quot; height=&quot;90&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;xZzTaOt1aIzmAzum-WpP-4&quot; value=&quot;有多少work_ptr就要有多少threads，也存储在vector中，这样可以让每一个io_contex 在各个线程中使用。&quot; style=&quot;whiteSpace=wrap;html=1;rounded=0;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;513&quot; y=&quot;327.5&quot; width=&quot;150&quot; height=&quot;99&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;xZzTaOt1aIzmAzum-WpP-7&quot; value=&quot;在构造函数参数初始化数据。把任务放入线程启动，然后在线程中run&quot; style=&quot;whiteSpace=wrap;html=1;rounded=0;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;39&quot; y=&quot;490&quot; width=&quot;120&quot; height=&quot;60&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;xZzTaOt1aIzmAzum-WpP-14&quot; value=&quot;&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;xZzTaOt1aIzmAzum-WpP-11&quot; target=&quot;xZzTaOt1aIzmAzum-WpP-13&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;xZzTaOt1aIzmAzum-WpP-11&quot; value=&quot;GetIOService函数循环取到_ioService&amp;lt;div&amp;gt;s容器中的io_contex进行返回，然后继续循环下标&amp;lt;/div&amp;gt;&quot; style=&quot;whiteSpace=wrap;html=1;rounded=0;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;243&quot; y=&quot;453.5&quot; width=&quot;162&quot; height=&quot;76&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;xZzTaOt1aIzmAzum-WpP-16&quot; value=&quot;&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;xZzTaOt1aIzmAzum-WpP-13&quot; target=&quot;xZzTaOt1aIzmAzum-WpP-15&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;xZzTaOt1aIzmAzum-WpP-13&quot; value=&quot;stop函数调用work对io_contex进行停止&quot; style=&quot;whiteSpace=wrap;html=1;rounded=0;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;264&quot; y=&quot;561.5&quot; width=&quot;120&quot; height=&quot;60&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;xZzTaOt1aIzmAzum-WpP-15&quot; value=&quot;stop时要等里面的任务执行完再退出，所以要jion&quot; style=&quot;whiteSpace=wrap;html=1;rounded=0;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;264&quot; y=&quot;642.5&quot; width=&quot;120&quot; height=&quot;60&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;xZzTaOt1aIzmAzum-WpP-23&quot; value=&quot;&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;xZzTaOt1aIzmAzum-WpP-17&quot; target=&quot;xZzTaOt1aIzmAzum-WpP-22&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;xZzTaOt1aIzmAzum-WpP-38&quot; value=&quot;&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;xZzTaOt1aIzmAzum-WpP-17&quot; target=&quot;xZzTaOt1aIzmAzum-WpP-37&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;xZzTaOt1aIzmAzum-WpP-17&quot; value=&quot;ChatServer主函数&amp;lt;div&amp;gt;先取出配置信息，然后调用AsIOServicePool的GetInstance（）函数，使用池子。&amp;lt;/div&amp;gt;&quot; style=&quot;rounded=1;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;231&quot; y=&quot;126&quot; width=&quot;234&quot; height=&quot;63&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;xZzTaOt1aIzmAzum-WpP-20&quot; value=&quot;ChatServer主函数自己定义了一个io_contex&quot; style=&quot;whiteSpace=wrap;html=1;rounded=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;210&quot; width=&quot;120&quot; height=&quot;60&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;xZzTaOt1aIzmAzum-WpP-25&quot; value=&quot;&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;xZzTaOt1aIzmAzum-WpP-22&quot; target=&quot;xZzTaOt1aIzmAzum-WpP-24&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;xZzTaOt1aIzmAzum-WpP-22&quot; value=&quot;定义了异步等待，如果输入了ctrl+c和窗口关闭信号就执行回调函数&quot; style=&quot;whiteSpace=wrap;html=1;rounded=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;75&quot; y=&quot;-18&quot; width=&quot;120&quot; height=&quot;60&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;xZzTaOt1aIzmAzum-WpP-24&quot; value=&quot;实现io_contex的关闭并触发连接池pool的stop函数&quot; style=&quot;whiteSpace=wrap;html=1;rounded=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;60&quot; y=&quot;-144&quot; width=&quot;150&quot; height=&quot;59&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;xZzTaOt1aIzmAzum-WpP-28&quot; value=&quot;&quot; style=&quot;endArrow=classic;html=1;rounded=0;exitX=0.186;exitY=0.041;exitDx=0;exitDy=0;exitPerimeter=0;entryX=0.346;entryY=1.019;entryDx=0;entryDy=0;entryPerimeter=0;&quot; edge=&quot;1&quot; parent=&quot;1&quot; target=&quot;xZzTaOt1aIzmAzum-WpP-20&quot;&gt;&#10;          &lt;mxGeometry width=&quot;50&quot; height=&quot;50&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;252.00399999999988&quot; y=&quot;126.00300000000009&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;270.48&quot; y=&quot;57.42&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;xZzTaOt1aIzmAzum-WpP-32&quot; value=&quot;取出端口号放入CServer服务中，然后io_contex调用run函数进行等待&quot; style=&quot;rounded=1;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;345&quot; width=&quot;120&quot; height=&quot;60&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;xZzTaOt1aIzmAzum-WpP-34&quot; value=&quot;&quot; style=&quot;endArrow=classic;html=1;rounded=0;exitX=0.75;exitY=0;exitDx=0;exitDy=0;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;xZzTaOt1aIzmAzum-WpP-17&quot; target=&quot;xZzTaOt1aIzmAzum-WpP-32&quot;&gt;&#10;          &lt;mxGeometry width=&quot;50&quot; height=&quot;50&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;414.13599999999997&quot; y=&quot;110.346&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;414&quot; y=&quot;42&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;xZzTaOt1aIzmAzum-WpP-45&quot; value=&quot;&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;xZzTaOt1aIzmAzum-WpP-37&quot; target=&quot;xZzTaOt1aIzmAzum-WpP-44&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;xZzTaOt1aIzmAzum-WpP-37&quot; value=&quot;CServer服务监听ChatServer中获取的端口号。&quot; style=&quot;whiteSpace=wrap;html=1;rounded=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;576&quot; y=&quot;127.5&quot; width=&quot;120&quot; height=&quot;60&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;xZzTaOt1aIzmAzum-WpP-41&quot; value=&quot;&quot; style=&quot;endArrow=classic;html=1;rounded=0;entryX=0.398;entryY=0.036;entryDx=0;entryDy=0;entryPerimeter=0;exitX=0.332;exitY=1.019;exitDx=0;exitDy=0;exitPerimeter=0;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;xZzTaOt1aIzmAzum-WpP-17&quot; target=&quot;xZzTaOt1aIzmAzum-WpP-2&quot;&gt;&#10;          &lt;mxGeometry width=&quot;50&quot; height=&quot;50&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;307&quot; y=&quot;198&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;365&quot; y=&quot;225&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;xZzTaOt1aIzmAzum-WpP-47&quot; value=&quot;&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;xZzTaOt1aIzmAzum-WpP-44&quot; target=&quot;xZzTaOt1aIzmAzum-WpP-46&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;xZzTaOt1aIzmAzum-WpP-44&quot; value=&quot;CServer类维护建立好的连接&quot; style=&quot;whiteSpace=wrap;html=1;rounded=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;776&quot; y=&quot;127.5&quot; width=&quot;120&quot; height=&quot;60&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;xZzTaOt1aIzmAzum-WpP-46&quot; value=&quot;构造函数中获取主函数的io_contex和port进行初始化，&quot; style=&quot;whiteSpace=wrap;html=1;rounded=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;776&quot; y=&quot;27&quot; width=&quot;120&quot; height=&quot;60&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;xZzTaOt1aIzmAzum-WpP-48&quot; value=&quot;ClearSession发现无效就清除session&quot; style=&quot;whiteSpace=wrap;html=1;rounded=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;663&quot; y=&quot;252&quot; width=&quot;120&quot; height=&quot;60&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;xZzTaOt1aIzmAzum-WpP-51&quot; value=&quot;&amp;lt;div&amp;gt;对port和io_contex进行存储&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;acceptor是asio定义的，接收连接&amp;lt;/div&amp;gt;session存储在map中&amp;lt;div&amp;gt;mutex管理此map保证写入安全&amp;lt;/div&amp;gt;&quot; style=&quot;whiteSpace=wrap;html=1;rounded=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;801&quot; y=&quot;252&quot; width=&quot;117&quot; height=&quot;126&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;xZzTaOt1aIzmAzum-WpP-53&quot; value=&quot;&quot; style=&quot;endArrow=classic;html=1;rounded=0;entryX=0.5;entryY=0;entryDx=0;entryDy=0;&quot; edge=&quot;1&quot; parent=&quot;1&quot; target=&quot;xZzTaOt1aIzmAzum-WpP-48&quot;&gt;&#10;          &lt;mxGeometry width=&quot;50&quot; height=&quot;50&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;828&quot; y=&quot;189&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;783&quot; y=&quot;189&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;xZzTaOt1aIzmAzum-WpP-62&quot; value=&quot;&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;xZzTaOt1aIzmAzum-WpP-55&quot; target=&quot;xZzTaOt1aIzmAzum-WpP-61&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;xZzTaOt1aIzmAzum-WpP-55&quot; value=&quot;HandleAccept()接收对端连接处理的回调&quot; style=&quot;whiteSpace=wrap;html=1;rounded=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;936&quot; y=&quot;252&quot; width=&quot;120&quot; height=&quot;63&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;xZzTaOt1aIzmAzum-WpP-57&quot; value=&quot;&quot; style=&quot;endArrow=classic;html=1;rounded=0;exitX=0.971;exitY=0.928;exitDx=0;exitDy=0;exitPerimeter=0;entryX=0.359;entryY=-0.039;entryDx=0;entryDy=0;entryPerimeter=0;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;xZzTaOt1aIzmAzum-WpP-44&quot; target=&quot;xZzTaOt1aIzmAzum-WpP-55&quot;&gt;&#10;          &lt;mxGeometry width=&quot;50&quot; height=&quot;50&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;918&quot; y=&quot;248&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;968&quot; y=&quot;198&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;xZzTaOt1aIzmAzum-WpP-66&quot; value=&quot;&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;xZzTaOt1aIzmAzum-WpP-58&quot; target=&quot;xZzTaOt1aIzmAzum-WpP-65&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;xZzTaOt1aIzmAzum-WpP-58&quot; value=&quot;StartAccept()开始监听对端连接：在IOServicePool中取出服务：AsioIOServicePool::GetInstance()-&amp;amp;gt;GetIOService();，放入CSession中处理连接，每有一个连接就从pool中取出一个io_contex，交给新建的session，主函数的session只用于监听连接。_acceptor.async_accept回调HandleAccept()函数对连接进行处理。&quot; style=&quot;whiteSpace=wrap;html=1;rounded=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;1071&quot; y=&quot;252&quot; width=&quot;270&quot; height=&quot;135&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;xZzTaOt1aIzmAzum-WpP-59&quot; value=&quot;&quot; style=&quot;endArrow=classic;html=1;rounded=0;entryX=0.294;entryY=-0.046;entryDx=0;entryDy=0;entryPerimeter=0;exitX=1;exitY=0.75;exitDx=0;exitDy=0;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;xZzTaOt1aIzmAzum-WpP-44&quot; target=&quot;xZzTaOt1aIzmAzum-WpP-58&quot;&gt;&#10;          &lt;mxGeometry width=&quot;50&quot; height=&quot;50&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;990&quot; y=&quot;212&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;1035&quot; y=&quot;162&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;xZzTaOt1aIzmAzum-WpP-60&quot; value=&quot;&quot; style=&quot;endArrow=classic;html=1;rounded=0;exitX=0.75;exitY=1;exitDx=0;exitDy=0;entryX=0.555;entryY=0.017;entryDx=0;entryDy=0;entryPerimeter=0;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;xZzTaOt1aIzmAzum-WpP-44&quot; target=&quot;xZzTaOt1aIzmAzum-WpP-51&quot;&gt;&#10;          &lt;mxGeometry width=&quot;50&quot; height=&quot;50&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;855&quot; y=&quot;198&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;941&quot; y=&quot;265&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;xZzTaOt1aIzmAzum-WpP-61&quot; value=&quot;new_session调用CSession的start函数&quot; style=&quot;whiteSpace=wrap;html=1;rounded=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;936&quot; y=&quot;395&quot; width=&quot;120&quot; height=&quot;63&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;xZzTaOt1aIzmAzum-WpP-68&quot; value=&quot;&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;xZzTaOt1aIzmAzum-WpP-65&quot; target=&quot;xZzTaOt1aIzmAzum-WpP-67&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;xZzTaOt1aIzmAzum-WpP-72&quot; value=&quot;&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;xZzTaOt1aIzmAzum-WpP-65&quot; target=&quot;xZzTaOt1aIzmAzum-WpP-71&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;xZzTaOt1aIzmAzum-WpP-65&quot; value=&quot;new_session为CSession类的实例，在CSesion类构造函数中初始化各种参数，并为每个session生成一个uuid。CSession的AsyncReadHead()函数其中回调asyncReadFull()函数，读够了头部字节信息就调用asyncReadLen()函数对内容进行长度读取。读完回调handler函数，return。接收完之后把接收节点清空，然后把data数据拷贝到接收节点_recv_head_node中。最后在AsyncReadHead()函数中调用AsyncReadBody()对数据进行读取。&quot; style=&quot;whiteSpace=wrap;html=1;rounded=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;1072&quot; y=&quot;467&quot; width=&quot;269&quot; height=&quot;190&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;xZzTaOt1aIzmAzum-WpP-70&quot; value=&quot;&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;xZzTaOt1aIzmAzum-WpP-67&quot; target=&quot;xZzTaOt1aIzmAzum-WpP-69&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;xZzTaOt1aIzmAzum-WpP-76&quot; value=&quot;&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;xZzTaOt1aIzmAzum-WpP-67&quot; target=&quot;xZzTaOt1aIzmAzum-WpP-75&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;xZzTaOt1aIzmAzum-WpP-67&quot; value=&quot;AsyncReadBody()函数中检测是否有效然后cout输出。最后把所有的信息都存储在LogicSystem逻辑处理类中，调用该类的PostMsgToQue()函数，把信息都放在_msg_que队列中&quot; style=&quot;whiteSpace=wrap;html=1;rounded=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;1099.5&quot; y=&quot;729&quot; width=&quot;213&quot; height=&quot;126&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;xZzTaOt1aIzmAzum-WpP-69&quot; value=&quot;最后在AsyncReadBody()函数中再次调用AsyncReadHead()函数继续监听头部。接收接收。&quot; style=&quot;whiteSpace=wrap;html=1;rounded=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;1068&quot; y=&quot;909&quot; width=&quot;276&quot; height=&quot;112&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;xZzTaOt1aIzmAzum-WpP-74&quot; value=&quot;&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;xZzTaOt1aIzmAzum-WpP-71&quot; target=&quot;xZzTaOt1aIzmAzum-WpP-73&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;xZzTaOt1aIzmAzum-WpP-71&quot; value=&quot;CSession调用Send函数进行发送。把要发送的数据构造成SendNote然后放入队列_send_que（异步发送可保证其有序性），进行排序。判断队列长度是否为0，如果不为0则队列有很多元素。取出队首元素调用async_write函数进行发送。&quot; style=&quot;whiteSpace=wrap;html=1;rounded=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;1404&quot; y=&quot;504.5&quot; width=&quot;207&quot; height=&quot;116.5&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;xZzTaOt1aIzmAzum-WpP-73&quot; value=&quot;发完之后调用HandleWrite()回调函数，对队列加锁，因为有可能多个队列都调用该函数。然后把数据pop弹出，表示第一个元素发完。再次检查队列是否为空，再次运行，直至队列所有元素都发完。&quot; style=&quot;whiteSpace=wrap;html=1;rounded=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;1421.25&quot; y=&quot;675&quot; width=&quot;172.5&quot; height=&quot;107.75&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;xZzTaOt1aIzmAzum-WpP-78&quot; value=&quot;&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;xZzTaOt1aIzmAzum-WpP-75&quot; target=&quot;xZzTaOt1aIzmAzum-WpP-77&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;xZzTaOt1aIzmAzum-WpP-75&quot; value=&quot;在LogicSystem()中专门启动了一个_worker_thread线程，负责在队列中取数据DealMsg。如果队列为空就暂时挂起，当cession放入数据时就notify该线程。&quot; style=&quot;whiteSpace=wrap;html=1;rounded=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;746.5&quot; y=&quot;745.5&quot; width=&quot;226&quot; height=&quot;93&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;xZzTaOt1aIzmAzum-WpP-77&quot; value=&quot;LogicSystem()中的session-&amp;amp;gt;Send()函数进行写数据&quot; style=&quot;rounded=1;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;800&quot; y=&quot;657&quot; width=&quot;120&quot; height=&quot;60&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;      &lt;/root&gt;&#10;    &lt;/mxGraphModel&gt;&#10;  &lt;/diagram&gt;&#10;&lt;/mxfile&gt;&#10;" style="background-color: rgb(255, 255, 255);"><defs/><rect fill="#ffffff" width="100%" height="100%" x="0" y="0"/><g><g data-cell-id="0"><g data-cell-id="1"><g data-cell-id="xZzTaOt1aIzmAzum-WpP-3"><g><path d="M 162 521 L 218.63 521" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 223.88 521 L 216.88 524.5 L 218.63 521 L 216.88 517.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g></g><g data-cell-id="xZzTaOt1aIzmAzum-WpP-8"><g><path d="M 81 552.5 L 81 627.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 81 632.88 L 77.5 625.88 L 81 627.63 L 84.5 625.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g></g><g data-cell-id="xZzTaOt1aIzmAzum-WpP-1"><g><rect x="0" y="489.5" width="162" height="63" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 160px; height: 1px; padding-top: 521px; margin-left: 1px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">AsioServicePool单例类中work_ptr管理work绑定ioservice让其不退出</div></div></div></foreignObject><text x="81" y="525" fill="rgb(0, 0, 0)" font-family="&quot;Helvetica&quot;" font-size="12px" text-anchor="middle">AsioServicePool单例类中work_ptr管理work...</text></switch></g></g></g><g data-cell-id="xZzTaOt1aIzmAzum-WpP-5"><g><path d="M 387 521 L 488.63 521" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 493.88 521 L 486.88 524.5 L 488.63 521 L 486.88 517.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g></g><g data-cell-id="xZzTaOt1aIzmAzum-WpP-12"><g><path d="M 306 566 L 306 586 L 306 577.48 L 306 591.13" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 306 596.38 L 302.5 589.38 L 306 591.13 L 309.5 589.38 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g></g><g data-cell-id="xZzTaOt1aIzmAzum-WpP-2"><g><rect x="225" y="476" width="162" height="90" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 160px; height: 1px; padding-top: 521px; margin-left: 226px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">GetIOService（）获取池中的io_context让其使用。所有的io_contex存储在vector中。<div>有多少io_contex就有多少work_ptr，也是存储在vector中。</div></div></div></div></foreignObject><text x="306" y="525" fill="rgb(0, 0, 0)" font-family="&quot;Helvetica&quot;" font-size="12px" text-anchor="middle">GetIOService（）获取池中的io_context让其使用。所有的io_co...</text></switch></g></g></g><g data-cell-id="xZzTaOt1aIzmAzum-WpP-4"><g><rect x="495" y="471.5" width="150" height="99" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 148px; height: 1px; padding-top: 521px; margin-left: 496px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">有多少work_ptr就要有多少threads，也存储在vector中，这样可以让每一个io_contex 在各个线程中使用。</div></div></div></foreignObject><text x="570" y="525" fill="rgb(0, 0, 0)" font-family="&quot;Helvetica&quot;" font-size="12px" text-anchor="middle">有多少work_ptr就要有多少threads，也存储在vector中，这样可以让每一个io_c...</text></switch></g></g></g><g data-cell-id="xZzTaOt1aIzmAzum-WpP-7"><g><rect x="21" y="634" width="120" height="60" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 664px; margin-left: 22px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">在构造函数参数初始化数据。把任务放入线程启动，然后在线程中run</div></div></div></foreignObject><text x="81" y="668" fill="rgb(0, 0, 0)" font-family="&quot;Helvetica&quot;" font-size="12px" text-anchor="middle">在构造函数参数初始化数据。把任务放入线程启动，然后在线程中run</text></switch></g></g></g><g data-cell-id="xZzTaOt1aIzmAzum-WpP-14"><g><path d="M 306 673.5 L 306 693.48 L 306 685.48 L 306 699.13" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 306 704.38 L 302.5 697.38 L 306 699.13 L 309.5 697.38 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g></g><g data-cell-id="xZzTaOt1aIzmAzum-WpP-11"><g><rect x="225" y="597.5" width="162" height="76" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 160px; height: 1px; padding-top: 636px; margin-left: 226px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">GetIOService函数循环取到_ioService<div>s容器中的io_contex进行返回，然后继续循环下标</div></div></div></div></foreignObject><text x="306" y="639" fill="rgb(0, 0, 0)" font-family="&quot;Helvetica&quot;" font-size="12px" text-anchor="middle">GetIOService函数循环取到_ioService...</text></switch></g></g></g><g data-cell-id="xZzTaOt1aIzmAzum-WpP-16"><g><path d="M 306 765.5 L 306 785.48 L 306 766.52 L 306 780.13" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 306 785.38 L 302.5 778.38 L 306 780.13 L 309.5 778.38 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g></g><g data-cell-id="xZzTaOt1aIzmAzum-WpP-13"><g><rect x="246" y="705.5" width="120" height="60" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 736px; margin-left: 247px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">stop函数调用work对io_contex进行停止</div></div></div></foreignObject><text x="306" y="739" fill="rgb(0, 0, 0)" font-family="&quot;Helvetica&quot;" font-size="12px" text-anchor="middle">stop函数调用work对io_contex进行停止</text></switch></g></g></g><g data-cell-id="xZzTaOt1aIzmAzum-WpP-15"><g><rect x="246" y="786.5" width="120" height="60" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 817px; margin-left: 247px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">stop时要等里面的任务执行完再退出，所以要jion</div></div></div></foreignObject><text x="306" y="820" fill="rgb(0, 0, 0)" font-family="&quot;Helvetica&quot;" font-size="12px" text-anchor="middle">stop时要等里面的任务执行完再退出，所以要jion</text></switch></g></g></g><g data-cell-id="xZzTaOt1aIzmAzum-WpP-23"><g><path d="M 213 301.48 L 117.04 301.48 L 117.04 192.37" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 117.04 187.12 L 120.54 194.12 L 117.04 192.37 L 113.54 194.12 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g></g><g data-cell-id="xZzTaOt1aIzmAzum-WpP-38"><g><path d="M 447 301.5 L 551.63 301.5" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 556.88 301.5 L 549.88 305 L 551.63 301.5 L 549.88 298 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g></g><g data-cell-id="xZzTaOt1aIzmAzum-WpP-17"><g><rect x="213" y="270" width="234" height="63" rx="9.45" ry="9.45" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 232px; height: 1px; padding-top: 302px; margin-left: 214px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">ChatServer主函数<div>先取出配置信息，然后调用AsIOServicePool的GetInstance（）函数，使用池子。</div></div></div></div></foreignObject><text x="330" y="305" fill="rgb(0, 0, 0)" font-family="&quot;Helvetica&quot;" font-size="12px" text-anchor="middle">ChatServer主函数...</text></switch></g></g></g><g data-cell-id="xZzTaOt1aIzmAzum-WpP-20"><g><rect x="192" y="144" width="120" height="60" rx="9" ry="9" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 174px; margin-left: 193px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">ChatServer主函数自己定义了一个io_contex</div></div></div></foreignObject><text x="252" y="178" fill="rgb(0, 0, 0)" font-family="&quot;Helvetica&quot;" font-size="12px" text-anchor="middle">ChatServer主函数自己定义了一个io_contex</text></switch></g></g></g><g data-cell-id="xZzTaOt1aIzmAzum-WpP-25"><g><path d="M 117 126 L 117 65.37" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 117 60.12 L 120.5 67.12 L 117 65.37 L 113.5 67.12 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g></g><g data-cell-id="xZzTaOt1aIzmAzum-WpP-22"><g><rect x="57" y="126" width="120" height="60" rx="9" ry="9" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 156px; margin-left: 58px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">定义了异步等待，如果输入了ctrl+c和窗口关闭信号就执行回调函数</div></div></div></foreignObject><text x="117" y="160" fill="rgb(0, 0, 0)" font-family="&quot;Helvetica&quot;" font-size="12px" text-anchor="middle">定义了异步等待，如果输入了ctrl+c和窗口关闭信号就执行回调函数</text></switch></g></g></g><g data-cell-id="xZzTaOt1aIzmAzum-WpP-24"><g><rect x="42" y="0" width="150" height="59" rx="8.85" ry="8.85" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 148px; height: 1px; padding-top: 30px; margin-left: 43px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">实现io_contex的关闭并触发连接池pool的stop函数</div></div></div></foreignObject><text x="117" y="33" fill="rgb(0, 0, 0)" font-family="&quot;Helvetica&quot;" font-size="12px" text-anchor="middle">实现io_contex的关闭并触发连接池pool的stop函数</text></switch></g></g></g><g data-cell-id="xZzTaOt1aIzmAzum-WpP-28"><g><path d="M 234 270 L 233.57 211.51" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 233.53 206.26 L 237.08 213.23 L 233.57 211.51 L 230.08 213.28 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g></g><g data-cell-id="xZzTaOt1aIzmAzum-WpP-32"><g><rect x="327" y="144" width="120" height="60" rx="9" ry="9" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 174px; margin-left: 328px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">取出端口号放入CServer服务中，然后io_contex调用run函数进行等待</div></div></div></foreignObject><text x="387" y="178" fill="rgb(0, 0, 0)" font-family="&quot;Helvetica&quot;" font-size="12px" text-anchor="middle">取出端口号放入CServer服务中，然后io_contex调用run函数进行等待</text></switch></g></g></g><g data-cell-id="xZzTaOt1aIzmAzum-WpP-34"><g><path d="M 388.5 270 L 387.57 210.37" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 387.49 205.12 L 391.1 212.06 L 387.57 210.37 L 384.1 212.17 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g></g><g data-cell-id="xZzTaOt1aIzmAzum-WpP-45"><g><path d="M 678 301.5 L 751.63 301.5" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 756.88 301.5 L 749.88 305 L 751.63 301.5 L 749.88 298 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g></g><g data-cell-id="xZzTaOt1aIzmAzum-WpP-37"><g><rect x="558" y="271.5" width="120" height="60" rx="9" ry="9" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 302px; margin-left: 559px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">CServer服务监听ChatServer中获取的端口号。</div></div></div></foreignObject><text x="618" y="305" fill="rgb(0, 0, 0)" font-family="&quot;Helvetica&quot;" font-size="12px" text-anchor="middle">CServer服务监听ChatServer中获取的端口号。</text></switch></g></g></g><g data-cell-id="xZzTaOt1aIzmAzum-WpP-41"><g><path d="M 290.69 334.2 L 289.53 472.87" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 289.49 478.12 L 286.04 471.09 L 289.53 472.87 L 293.04 471.15 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g></g><g data-cell-id="xZzTaOt1aIzmAzum-WpP-47"><g><path d="M 818 271.5 L 818 237.37" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 818 232.12 L 821.5 239.12 L 818 237.37 L 814.5 239.12 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g></g><g data-cell-id="xZzTaOt1aIzmAzum-WpP-44"><g><rect x="758" y="271.5" width="120" height="60" rx="9" ry="9" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 302px; margin-left: 759px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">CServer类维护建立好的连接</div></div></div></foreignObject><text x="818" y="305" fill="rgb(0, 0, 0)" font-family="&quot;Helvetica&quot;" font-size="12px" text-anchor="middle">CServer类维护建立好的连接</text></switch></g></g></g><g data-cell-id="xZzTaOt1aIzmAzum-WpP-46"><g><rect x="758" y="171" width="120" height="60" rx="9" ry="9" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 201px; margin-left: 759px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">构造函数中获取主函数的io_contex和port进行初始化，</div></div></div></foreignObject><text x="818" y="205" fill="rgb(0, 0, 0)" font-family="&quot;Helvetica&quot;" font-size="12px" text-anchor="middle">构造函数中获取主函数的io_contex和port进行初始化，</text></switch></g></g></g><g data-cell-id="xZzTaOt1aIzmAzum-WpP-48"><g><rect x="645" y="396" width="120" height="60" rx="9" ry="9" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 426px; margin-left: 646px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">ClearSession发现无效就清除session</div></div></div></foreignObject><text x="705" y="430" fill="rgb(0, 0, 0)" font-family="&quot;Helvetica&quot;" font-size="12px" text-anchor="middle">ClearSession发现无效就清除session</text></switch></g></g></g><g data-cell-id="xZzTaOt1aIzmAzum-WpP-51"><g><rect x="783" y="396" width="117" height="126" rx="17.55" ry="17.55" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 115px; height: 1px; padding-top: 459px; margin-left: 784px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><div>对port和io_contex进行存储</div><div>acceptor是asio定义的，接收连接</div>session存储在map中<div>mutex管理此map保证写入安全</div></div></div></div></foreignObject><text x="842" y="463" fill="rgb(0, 0, 0)" font-family="&quot;Helvetica&quot;" font-size="12px" text-anchor="middle">对port和io_contex进行存储...</text></switch></g></g></g><g data-cell-id="xZzTaOt1aIzmAzum-WpP-53"><g><path d="M 810 333 L 710.46 392.72" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 705.96 395.42 L 710.16 388.82 L 710.46 392.72 L 713.76 394.82 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g></g><g data-cell-id="xZzTaOt1aIzmAzum-WpP-62"><g><path d="M 978 459 L 978 532.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 978 537.88 L 974.5 530.88 L 978 532.63 L 981.5 530.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g></g><g data-cell-id="xZzTaOt1aIzmAzum-WpP-55"><g><rect x="918" y="396" width="120" height="63" rx="9.45" ry="9.45" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 428px; margin-left: 919px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">HandleAccept()接收对端连接处理的回调</div></div></div></foreignObject><text x="978" y="431" fill="rgb(0, 0, 0)" font-family="&quot;Helvetica&quot;" font-size="12px" text-anchor="middle">HandleAccept()接收对端连接处理的回调</text></switch></g></g></g><g data-cell-id="xZzTaOt1aIzmAzum-WpP-57"><g><path d="M 874.52 327.18 L 956.03 389.67" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 960.19 392.86 L 952.51 391.38 L 956.03 389.67 L 956.77 385.83 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g></g><g data-cell-id="xZzTaOt1aIzmAzum-WpP-66"><g><path d="M 1188 531 L 1188 571.04 L 1188.44 604.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1188.5 609.88 L 1184.91 602.93 L 1188.44 604.63 L 1191.91 602.84 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g></g><g data-cell-id="xZzTaOt1aIzmAzum-WpP-58"><g><rect x="1053" y="396" width="270" height="135" rx="20.25" ry="20.25" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 268px; height: 1px; padding-top: 464px; margin-left: 1054px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">StartAccept()开始监听对端连接：在IOServicePool中取出服务：AsioIOServicePool::GetInstance()-&gt;GetIOService();，放入CSession中处理连接，每有一个连接就从pool中取出一个io_contex，交给新建的session，主函数的session只用于监听连接。_acceptor.async_accept回调HandleAccept()函数对连接进行处理。</div></div></div></foreignObject><text x="1188" y="467" fill="rgb(0, 0, 0)" font-family="&quot;Helvetica&quot;" font-size="12px" text-anchor="middle">StartAccept()开始监听对端连接：在IOServicePool中取出服务：AsioIOServicePool::...</text></switch></g></g></g><g data-cell-id="xZzTaOt1aIzmAzum-WpP-59"><g><path d="M 878 316.5 L 1126.26 388.03" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1131.31 389.48 L 1123.61 390.91 L 1126.26 388.03 L 1125.55 384.18 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g></g><g data-cell-id="xZzTaOt1aIzmAzum-WpP-60"><g><path d="M 848 331.5 L 847.94 391.77" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 847.94 397.02 L 844.44 390.02 L 847.94 391.77 L 851.44 390.03 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g></g><g data-cell-id="xZzTaOt1aIzmAzum-WpP-61"><g><rect x="918" y="539" width="120" height="63" rx="9.45" ry="9.45" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 571px; margin-left: 919px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">new_session调用CSession的start函数</div></div></div></foreignObject><text x="978" y="574" fill="rgb(0, 0, 0)" font-family="&quot;Helvetica&quot;" font-size="12px" text-anchor="middle">new_session调用CSession的s...</text></switch></g></g></g><g data-cell-id="xZzTaOt1aIzmAzum-WpP-68"><g><path d="M 1188.52 801 L 1188.52 837.04 L 1188.09 866.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1188.02 871.88 L 1184.62 864.83 L 1188.09 866.63 L 1191.62 864.93 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g></g><g data-cell-id="xZzTaOt1aIzmAzum-WpP-72"><g><path d="M 1323 706 L 1354.52 706 L 1379.63 706.59" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1384.88 706.71 L 1377.8 710.05 L 1379.63 706.59 L 1377.97 703.05 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g></g><g data-cell-id="xZzTaOt1aIzmAzum-WpP-65"><g><rect x="1054" y="611" width="269" height="190" rx="28.5" ry="28.5" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 267px; height: 1px; padding-top: 706px; margin-left: 1055px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">new_session为CSession类的实例，在CSesion类构造函数中初始化各种参数，并为每个session生成一个uuid。CSession的AsyncReadHead()函数其中回调asyncReadFull()函数，读够了头部字节信息就调用asyncReadLen()函数对内容进行长度读取。读完回调handler函数，return。接收完之后把接收节点清空，然后把data数据拷贝到接收节点_recv_head_node中。最后在AsyncReadHead()函数中调用AsyncReadBody()对数据进行读取。</div></div></div></foreignObject><text x="1188" y="710" fill="rgb(0, 0, 0)" font-family="&quot;Helvetica&quot;" font-size="12px" text-anchor="middle">new_session为CSession类的实例，在CSesion类构造函数中初始化各种参数，并为每个session生成一个uuid。CSession...</text></switch></g></g></g><g data-cell-id="xZzTaOt1aIzmAzum-WpP-70"><g><path d="M 1188 999 L 1188 1046.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1188 1051.88 L 1184.5 1044.88 L 1188 1046.63 L 1191.5 1044.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g></g><g data-cell-id="xZzTaOt1aIzmAzum-WpP-76"><g><path d="M 1081.5 936 L 960.87 936" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 955.62 936 L 962.62 932.5 L 960.87 936 L 962.62 939.5 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g></g><g data-cell-id="xZzTaOt1aIzmAzum-WpP-67"><g><rect x="1081.5" y="873" width="213" height="126" rx="18.9" ry="18.9" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 211px; height: 1px; padding-top: 936px; margin-left: 1083px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">AsyncReadBody()函数中检测是否有效然后cout输出。最后把所有的信息都存储在LogicSystem逻辑处理类中，调用该类的PostMsgToQue()函数，把信息都放在_msg_que队列中</div></div></div></foreignObject><text x="1188" y="940" fill="rgb(0, 0, 0)" font-family="&quot;Helvetica&quot;" font-size="12px" text-anchor="middle">AsyncReadBody()函数中检测是否有效然后cout输出。最后把所有的信息都存储在LogicSystem逻辑处理类中，调用该类的PostM...</text></switch></g></g></g><g data-cell-id="xZzTaOt1aIzmAzum-WpP-69"><g><rect x="1050" y="1053" width="276" height="112" rx="16.8" ry="16.8" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 274px; height: 1px; padding-top: 1109px; margin-left: 1051px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">最后在AsyncReadBody()函数中再次调用AsyncReadHead()函数继续监听头部。接收接收。</div></div></div></foreignObject><text x="1188" y="1113" fill="rgb(0, 0, 0)" font-family="&quot;Helvetica&quot;" font-size="12px" text-anchor="middle">最后在AsyncReadBody()函数中再次调用AsyncReadHead()函数继续监听头部。接收接收。</text></switch></g></g></g><g data-cell-id="xZzTaOt1aIzmAzum-WpP-74"><g><path d="M 1489.48 765 L 1489.48 792 L 1489.54 812.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1489.55 817.88 L 1486.03 810.89 L 1489.54 812.63 L 1493.03 810.87 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g></g><g data-cell-id="xZzTaOt1aIzmAzum-WpP-71"><g><rect x="1386" y="648.5" width="207" height="116.5" rx="17.47" ry="17.47" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 205px; height: 1px; padding-top: 707px; margin-left: 1387px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">CSession调用Send函数进行发送。把要发送的数据构造成SendNote然后放入队列_send_que（异步发送可保证其有序性），进行排序。判断队列长度是否为0，如果不为0则队列有很多元素。取出队首元素调用async_write函数进行发送。</div></div></div></foreignObject><text x="1490" y="710" fill="rgb(0, 0, 0)" font-family="&quot;Helvetica&quot;" font-size="12px" text-anchor="middle">CSession调用Send函数进行发送。把要发送的数据构造成SendNote然后放入队列_send_que（异步发送可保证其有序性），进行排序。判断队列长度是否为0，如果不为0则队列有很多元素。取出队首元素调用asy...</text></switch></g></g></g><g data-cell-id="xZzTaOt1aIzmAzum-WpP-73"><g><rect x="1403.25" y="819" width="172.5" height="107.75" rx="16.16" ry="16.16" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 171px; height: 1px; padding-top: 873px; margin-left: 1404px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">发完之后调用HandleWrite()回调函数，对队列加锁，因为有可能多个队列都调用该函数。然后把数据pop弹出，表示第一个元素发完。再次检查队列是否为空，再次运行，直至队列所有元素都发完。</div></div></div></foreignObject><text x="1490" y="876" fill="rgb(0, 0, 0)" font-family="&quot;Helvetica&quot;" font-size="12px" text-anchor="middle">发完之后调用HandleWrite()回调函数，对队列加锁，因为有可能多个队列都调用该函数。然后把数据pop弹出，表示第一个元素发完。再次检查队列是否为空，再次运行，直至队列所有元素都发完。</text></switch></g></g></g><g data-cell-id="xZzTaOt1aIzmAzum-WpP-78"><g><path d="M 841.48 889.5 L 841.48 869.48 L 841.61 867.36" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 841.93 862.12 L 845 869.32 L 841.61 867.36 L 838.01 868.89 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/></g></g><g data-cell-id="xZzTaOt1aIzmAzum-WpP-75"><g><rect x="728.5" y="889.5" width="226" height="93" rx="13.95" ry="13.95" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 224px; height: 1px; padding-top: 936px; margin-left: 730px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">在LogicSystem()中专门启动了一个_worker_thread线程，负责在队列中取数据DealMsg。如果队列为空就暂时挂起，当cession放入数据时就notify该线程。</div></div></div></foreignObject><text x="842" y="940" fill="rgb(0, 0, 0)" font-family="&quot;Helvetica&quot;" font-size="12px" text-anchor="middle">在LogicSystem()中专门启动了一个_worker_thread线程，负责在队列中取数据DealMsg。如果队列为空就暂时挂起，当cess...</text></switch></g></g></g><g data-cell-id="xZzTaOt1aIzmAzum-WpP-77"><g><rect x="782" y="801" width="120" height="60" rx="9" ry="9" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 118px; height: 1px; padding-top: 831px; margin-left: 783px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">LogicSystem()中的session-&gt;Send()函数进行写数据</div></div></div></foreignObject><text x="842" y="835" fill="rgb(0, 0, 0)" font-family="&quot;Helvetica&quot;" font-size="12px" text-anchor="middle">LogicSystem()中的session...</text></switch></g></g></g></g></g></g></svg>